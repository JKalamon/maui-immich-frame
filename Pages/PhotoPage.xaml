<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="SimpleImmichFrame.Pages.PhotoPage"
             xmlns:pageModels="clr-namespace:SimpleImmichFrame.PageModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:behaviors="clr-namespace:SimpleImmichFrame.Behaviors"
             x:DataType="pageModels:PhotoPageModel"
             NavigationPage.HasNavigationBar="false"
             Background="#000"
             Title="PhotoPage">

  <ContentPage.Behaviors>
    <toolkit:StatusBarBehavior StatusBarColor="Transparent" StatusBarStyle="DarkContent" />
    <toolkit:EventToCommandBehavior
                EventName="Appearing"
                Command="{Binding AppearingCommand}" />
  </ContentPage.Behaviors>

  <ContentPage.Resources>
    <ResourceDictionary>
      <toolkit:IsNullConverter x:Key="IsNullConverter" />
      <toolkit:IsNotNullConverter x:Key="IsNotNullConverter" />
    </ResourceDictionary>
  </ContentPage.Resources>

  <Grid VerticalOptions="Fill">

    <VerticalStackLayout HorizontalOptions="Center" VerticalOptions="Center" IsVisible="{Binding ExceptionText, Converter={StaticResource IsNotNullConverter}}">
      <Label 
           Text="There was an error while downloading photos"
           HorizontalTextAlignment="Center"
           FontFamily="OpenSansRegular"
           TextColor="White"
           FontSize="25"/>
      <Label 
       Text="{Binding ExceptionText}"
       FontFamily="OpenSansRegular"
       TextColor="White"
       FontSize="20"/>

      <Button Text="Open settings" HeightRequest="50" Command="{Binding GoToSettingsCommand}" />
    </VerticalStackLayout>

    
    
    <Image Source="{Binding CurrentPhoto.ThumbnailImageSource}" IsVisible="{Binding ExceptionText, Converter={StaticResource IsNullConverter}}"
               Aspect="AspectFill"
               Opacity="0.8">
      <Image.Behaviors>
        <toolkit:AnimationBehavior>
          <toolkit:AnimationBehavior.AnimationType>
            <toolkit:FadeAnimation 
              Easing="{x:Static Easing.CubicOut}"/>
          </toolkit:AnimationBehavior.AnimationType>
        </toolkit:AnimationBehavior>
      </Image.Behaviors>
    </Image>

    <Image Source="{Binding CurrentPhoto.ImageSource}" VerticalOptions="FillAndExpand" HorizontalOptions="Center" Aspect="AspectFit" IsVisible="{Binding ExceptionText, Converter={StaticResource IsNullConverter}}" Opacity="1">
      <Image.GestureRecognizers>
        <TapGestureRecognizer Command="{Binding NextPhotoCommand}"/>
        <SwipeGestureRecognizer Direction="Up" Command="{Binding GoToSettingsCommand}"/>
        <SwipeGestureRecognizer Direction="Down" Command="{Binding ToggleDeleteButtonCommand}"/>
      </Image.GestureRecognizers>
      <Image.Behaviors>
        <toolkit:AnimationBehavior>
          <toolkit:AnimationBehavior.AnimationType>
            <toolkit:FadeAnimation 
                    Easing="{x:Static Easing.CubicOut}"/>
          </toolkit:AnimationBehavior.AnimationType>
        </toolkit:AnimationBehavior>
      </Image.Behaviors>
    </Image>


    <Button Text="Delete photo" IsVisible="{Binding ShowDeleteButton}" VerticalOptions="Start" BackgroundColor="Red" Margin="0,50,0,0" HeightRequest="50" Command="{Binding DeleteImageCommand}" />

    <Label 
               Text="{Binding CurrentTime}"
               HorizontalOptions="Start"
               VerticalOptions="End"
               FontFamily="OpenSansSemibold"
               Margin="100,0,0,125"
               TextColor="White"
               FontSize="55"/>

    <Label 
               Text="{Binding CurrentPhoto.CreatedDate}"
               HorizontalOptions="Start"
               VerticalOptions="End"
               FontFamily="OpenSansRegular"
               Margin="100,0,0,100"
               TextColor="White"
               FontSize="25"/>

    <VerticalStackLayout HorizontalOptions="End" VerticalOptions="End" Margin="0,0,100,100" IsVisible="{Binding CurrentPhoto, Converter={StaticResource IsNotNullConverter}}">
      <HorizontalStackLayout IsVisible="{Binding CurrentPhoto.DisplayAperture}">
        <Image Source="aperture.png" HeightRequest="20" Margin="0,0,10,0"/>
        <Label FontFamily="OpenSansRegular">
          <Label.FormattedText>
            <FormattedString>
              <Span TextColor="White" FontSize="18" Text="f/"/>
              <Span TextColor="White" FontSize="18" Text="{Binding CurrentPhoto.Aperture}"/>
            </FormattedString>
          </Label.FormattedText>
        </Label>
      </HorizontalStackLayout>

      <HorizontalStackLayout IsVisible="{Binding CurrentPhoto.DisplayIso}">
        <Image Source="iso.png" HeightRequest="20" Margin="0,0,10,0"/>
        <Label 
         Text="{Binding CurrentPhoto.Iso}"
         FontFamily="OpenSansRegular"
         TextColor="White"
         FontSize="18"/>
      </HorizontalStackLayout>

      <HorizontalStackLayout IsVisible="{Binding CurrentPhoto.DisplayFocalLength}">
        <Image Source="eye.png" HeightRequest="20" Margin="0,0,10,0"/>
        <Label 
         Text="{Binding CurrentPhoto.FocalLength}"
         FontFamily="OpenSansRegular">
          <Label.FormattedText>
            <FormattedString>
              <Span TextColor="White" FontSize="18" Text="{Binding CurrentPhoto.FocalLength}"/>
              <Span TextColor="White" FontSize="18" Text="mm"/>
            </FormattedString>
          </Label.FormattedText>
        </Label>
      </HorizontalStackLayout>
      <HorizontalStackLayout IsVisible="{Binding CurrentPhoto.DisplayShutterSpeed}">
        
        <Image Source="hourglass.png" HeightRequest="20" Margin="0,0,10,0"/>
        <Label 
         Text="{Binding CurrentPhoto.FocalLength}"
         FontFamily="OpenSansRegular">
          <Label.FormattedText>
            <FormattedString>
              <Span TextColor="White" FontSize="18" Text="{Binding CurrentPhoto.ShutterSpeed}"/>
              <Span TextColor="White" FontSize="18" Text="s"/>
            </FormattedString>
          </Label.FormattedText>
        </Label>
      </HorizontalStackLayout>
    </VerticalStackLayout>


  </Grid>
</ContentPage>